import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { PengajuanPinjamanService } from '../pengajuan-pinjaman.service';
import { FormDetailResponse } from '../pengajuan-pinjaman';
import { FormPengajuanPinjaman, Pinjaman } from '../../monitoring/monitoring';

@Component({
  selector: 'app-detail',
  templateUrl: './detail-pengajuan-pinjaman.component.html',
  styleUrls: ['./detail-pengajuan-pinjaman.component.css'] // Corrected from styleUrl to styleUrls
})
export class DetailPengajuanPinjamanComponent implements OnInit {
  form?: FormDetailResponse;

  constructor(
    private router: ActivatedRoute,
    private pengajuanPinjamanService: PengajuanPinjamanService
  ) { }

  ngOnInit() {
    this.refreshFormDetail();
  }

  refreshFormDetail() {
    const id: number = +this.router.snapshot.params['id']; // Unary plus to convert string to number
    this.pengajuanPinjamanService.getDetailPengajuanPinjaman(id).subscribe({
      next: (data) => {
        this.form = data;
        console.log(this.form);
      },
      error: (error) => console.error('Error fetching data:', error)
    });
  }

  createMinimalPinjaman() {
    if (!this.form) {
      console.error("Form data is not loaded.");
      return;
    }
  const id: number = +this.router.snapshot.params['id']; // Get the ID from the route params

    const minimalPinjamanData = {
      idPinjaman: null, // This will likely be auto-generated by your backend.
      pinjamanToUser: {
          idUser: this.form.formToUser.idUser,
          nameUser: this.form.formToUser.nameUser,
          nikUser: this.form.formToUser.nikUser,
      },
      pinjamanToAdmin: {
        idAdmin: 1,
        nameAdmin: "Admin Name",
        nppAdmin: "Admin NPP",
        usernameAdmin: "admin",
        passwordAdmin: "123456",
        profilepictAdmin: null,
      },
      alamat_pinjaman: this.form.alamatKtp,
      sisa_tagihan_pinjaman: 100000000,
      status_pinjaman: "lancar",
      tanggal_bayar_tagihan_pinjaman: new Date().toISOString(),
      tanggal_realisasi_pinjaman: new Date().toISOString(),
      total_bayar_tagihan_pinjaman: 400000000,
      

      amounts_bunga_berjalan_pinjaman: null,
      amounts_sisa_pokok_pinjaman: null,
      deskripsi_pembayaran_pinjaman: null,
      kolektabilitas_pinjaman: null,
      payoffs_bunga_berjalan_pinjaman: null,
      payoffs_sisa_pokok_pinjaman: null,
      rebates_bunga_berjalan_pinjaman: null,
      rebates_sisa_pokok_pinjaman: null,
      status_tagihan_pinjaman: null,
      total_amounts_pinjaman: null,
      total_payoffs_pinjaman: null,
      total_rebates_pinjaman: null,
    };
  
    this.pengajuanPinjamanService.createPinjamanMinimal(minimalPinjamanData).subscribe({
      next: (response) => console.log("Minimal Pinjaman created successfully", response),
      error: (error) => console.error("Error creating minimal Pinjaman:", error)
    });
    
  }

  
  createPengajuanPinjaman(data: any) {
    this.pengajuanPinjamanService.createPengajuanPinjaman(data).subscribe({
      next: (response) => console.log("New pengajuan pinjaman created successfully", response),
      error: (error) => console.error("Error creating new pengajuan pinjaman:", error)
    });
  }

    
    rejectPengajuan(id: number) {
      this.pengajuanPinjamanService.getDetailPengajuanPinjaman(id).subscribe({
        next: (currentData) => {
          const updatedData = {
            ...currentData,
            statusPengajuan: "Ditolak"
          };
          this.pengajuanPinjamanService.updateStatusPengajuanPinjaman(id, updatedData).subscribe({
            next: (response) => {
              console.log("Status updated successfully", response);
              // Handle successful update here
            },
            error: (error) => {
              console.error("Error updating status:", error);
              // Handle error here
            }
          });
        },
        error: (error) => {
          console.error("Error fetching current data:", error);
          // Handle error here
        }
      });
    }
  }
